---
title: "Primeiro Teste de Raspagem no Bluesky"
author: "Thales de Fante Romão"
lang: pt-br
format: html
execute: 
  cache: false
---

# SETUP


```{r}
#| label: setup
#| eval: true
#| warning: false

library(bskyr)
library(tidyverse)
library(readr)
library(jsonlite)
library(httr2)
```


## dados da autenticação do usuário para a raspagem

Usando o login do Thales

```{r}
#| label: usuario-autenticação
#| eval: true


#actor <- 'ennoe.bsky.social'

auth <- 
  bs_auth(
    user = "ennoe.bsky.social", 
    pass = "omp6-axyy-kme6-i4gm"
  )
```

# CONVERSÃO

transformando URI em URL e vice-versa

```{r}
#| label: uri-to-url-to-uri
#| eval: true

bs_uri_to_url('at://did:plc:ic6zqvuw5ulmfpjiwnhsr2ns/app.bsky.feed.post/3k7qmjev5lr2s')

bs_uri_to_url('at://did:plc:kwssn4xujlrl4ybhzm5vt5mg/app.bsky.feed.post/3l5xjaj66js24')

bs_url_to_uri('https://bsky.app/profile/ennoe.bsky.social', auth = auth)

bs_url_to_uri('https://bsky.app/profile/yasmelinss.bsky.social', auth = auth)
```

Pega apenas o valor do Record Key do usuário

```{r}

#| label: testando-extract-record-key
#| eval: true

bs_extract_record_key('at://did:plc:kwssn4xujlrl4ybhzm5vt5mg/app.bsky.feed.post/3l5xjaj66js24')
```

# RASPAGENS

## USUÁRIO

puxando um usuário pela url

```{r}
#| label: url-to-uri

bs_url_to_uri('https://bsky.app/profile/yasmelins.bsky.social', auth = auth)
```

puxando um usuário pela uri

```{r}
#| label: uri-ro-url

bs_uri_to_url('at://did:plc:vljand5f4megiw7rj4mpmhaw/app.bsky.feed.NA/NA')
```

pegando did do usuário

```{r}
#| label: str-extract

did <- str_extract('at://did:plc:vljand5f4megiw7rj4mpmhaw/app.bsky.feed.post/3l6br5zrsda2r', "did:[^/]+")

print(did)
```

puxando dados de um usuário pelo @ ou did

`$did` -> did
`$handle` -> @ do perfil
`$displayName` -> nome informal que o perfil escolheu
`$description` -> bio ou descrição do perfil
`$followersCount` -> quantidade de seguidores
`$followsCount` -> quantidade de pessoas que segue
`$postCount` -> quantidade de posts feitos
`$created_At` -> data de criação

`$profiles[[1]]$viewer$following`
[1] "at://did:plc:4bvoxokewgsqfjfefnzsppny/app.bsky.graph.follow/3lqazs263lf2w"

following → significa que você está seguindo esse perfil. (visão do viwer ou auth)

did:plc:4bvoxokewgsqfjfefnzsppny → é o DID (identificador descentralizado) do seu usuário (a conta autenticada).

app.bsky.graph.follow → tipo de registro: uma relação de "seguir".

3lqazs263lf2w → ID específico do registro (essa ação de seguir).

Esse campo quer dizer: “O usuário autenticado (DID 4bvoxokewgsqfjfefnzsppny) está seguindo o perfil que você acabou de buscar.”


`$viewer$knownFollowers` -> informações sobre os seguidores em comum
`$viewer$knownFollowers$count` -> conta seguidores em comum com o auth


```{r}
#| label: get-profile
#| eval: true

perfil<-
  bs_get_profile(
    did,
    auth = auth,
    clean = FALSE
  )
```


```{r}
#| label: filtrando as informações de 1 perfil

handle <- perfil$profiles[[1]]$handle

filtragem <- 
    tibble(
      nome_perfil = perfil$profiles[[1]]$displayName,
      bio = perfil$profiles[[1]]$description,
      seguidores = perfil$profiles[[1]]$followersCount,
      seguindo = perfil$profiles[[1]]$followsCount,
      posts = perfil$profiles[[1]]$postsCount,
      criado_em = perfil$profiles[[1]]$createdAt,
      url_perfil = paste0("https://bsky.app/profile/", handle),
      seguidores_em_comum = perfil$profiles[[1]]$viewer$knownFollowers,
    )

print(filtragem)
```


Procurando perfis com uma query específica

```{r}
#| label: search-actors
#| eval: true

procurandoperfis <- 
  bs_search_actors(
    'league of legend', #query == texto da busca
    typeahead = FALSE, #se TRUE, faz uma busca tipo "sugestão enquanto digita" (autocomplete). Padrão: FALSE.
    cursor = NULL, #paginação a parti de uma resposta anterior
    limit = 2,
    auth = auth,
    clean = FALSE
)

print(procurandoperfis)
```




## POSTS


Convertendo um post pela URI

```{r}
#| label: uri-to-url
#| 
bs_uri_to_url('at://did:plc:vljand5f4megiw7rj4mpmhaw/app.bsky.feed.post/3l6br5zrsda2r')
```

Convertendo um post pela URL

```{r}
#| label: url-to-uri2

bs_url_to_uri('https://bsky.app/profile/yasmelins.bsky.social/post/3l6br5zrsda2r', auth = auth)
```


Puxando um post de um usuário

```{r}
#| label: search-posts

posts_yasmelins <-
  bs_search_posts(
    query = "a",
    author = "yasmelins.bsky.social",
    limit = 1,
    auth = auth
  )

print(posts_yasmelins)
```


Puxando post com query específica

```{r}
#| label: search-posts2
#| eval: true

posts <- 
  bs_search_posts(
    query = '"league of legends" since:2024-08-30 until:2024-10-08',
    limit = 1,
    auth = auth
  )

print(posts)
```



## CURTIDAS

pegando curtidas (verificar)

`$feed` = lista
`$cursor` = key number


tentando pegar curtidas
primeiro você pega os posts de um usuário, e ai você passa a URI para `(bs_get_likes)`


```{r}
#| label: get-likes
#| eval: true


likes <- 
  bs_get_likes(
    actor = posts_yasmelins$uri, #diz de quem você quer pegar os likes, e espera um uri, não um handle
    limit = 10,
    auth = auth,
    clean = FALSE
  )
```
```{r}
likes$likes %>% 
  map_df(~ tibble(
    handle = .x$actor$handle,
    did = .x$actor$did,
    nome = .x$actor$displayName
  ))
```


## SEGUIDORES

`$followers$did` = did
`$followes$handle` = @
`$followers$associated$activitySubscription$allowSubscriptions` = Se follow, seguindo

Seguidores de um usuário


```{r}
#| label: get-followers
#| eval: true

bs_get_followers(
  actor <- did, #não estava funcinando com o handle ou @
  cursor = NULL,
  limit = 3,
  auth = auth,
  clean = FALSE
)  
```

Quem o usuário segue

`$subject$viewer$following` = erro ao puxar
ele também puxa o meu perfil ao final


```{r}
#| label: get-follows
#| eval: true

seguindo <-
  bs_get_follows(
    actor = 'emmoe.bsky.social',
    cursor = NULL,
    limit = 2,
    auth = auth,
    clean = FALSE
  )    

print(seguindo)
```

# REPLIES

```{r}
#| label: get_replies

replies <- bs_get_replies(
  uri = posts_yasmelins$uri,
  auth = auth,
  limit = 10,
  clean = FALSE
)

# Extrair infos do autor
replies$feed %>%
  map_df(~ tibble(
    handle = .x$post$author$handle,
    did = .x$post$author$did,
    texto = .x$post$record$text
  ))

```

# COMENTÁRIOS

```{r}
#| label: get-posthread

thread <- bs_get_post_thread(
  uri = posts_yasmelins$uri,
  auth = auth,
  depth = 2, # profundidade da thread
  clean = FALSE
)

# Extrair autores dos comentários
thread$thread$replies %>% 
  map_df(~ tibble(
    handle = .x$post$author$handle,
    texto = .x$post$record$text
  ))

```

