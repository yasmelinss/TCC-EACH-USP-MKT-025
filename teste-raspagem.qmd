---
title: "Primeiro Teste de Raspagem no Bluesky"
author: "Thales de Fante Romão"
lang: pt-br
format: html
---

```{r}
#| label: setup
#| warning: false

library(bskyr)
library(tidyverse)
library(readr)
```

## dados da autenticação do usuário para a raspagem

Usando o login do Thales

```{r}
#| label: usuário-autenticação

auth <- 
  bs_auth(
    user = "ennoe.bsky.social", 
    pass = "omp6-axyy-kme6-i4gm"
  )
```

[Explicação do Bluesky sobre os app passwords](https://blueskyfeeds.com/faq-app-password)

## raspando páginas à procura da string `"league of legends"`

Raspagem de teste

```{r}
posts <- 
  bs_search_posts(
    query = '"league of legends" since:2024-08-30 until:2024-10-08',
    limit = 10,
    auth = auth,
    
  )
print(posts)
####  AQUI: descobrir como fazer isso ----
# posts2 <- 
#   bs_search_posts(
#     query = '"league of legends"', 
#     since = "2024-08-30", 
#     until = "2024-10-08",
#     limit = 10,
#     auth = auth
#   )
# print(posts2)
```

[Página de documentação do bluesky](https://bsky.social/about/blog/05-31-2024-search)
com mais campos (keywords) que podem ser usadas nas queries


## descobrindo as informações que a raspagem traz

```{r}
#| label: olhando-estrutura

str(posts[1, ])
```


```{r}
#| label: exportando-xlsx
#| eval: false

#Salvar um data frame chamado posts em um arquivo Excel chamado posts_lol.xlsx, usando a função write_xlsx().
write_xlsx(posts, path = "teste_raspagem_urls.xlsx")
```


```{r}
#acessa a coluna uri do dataframe posts
uris <- posts$uri  
print(uris)

# convert_uri_to_url <- function(uri) {
#   # Remove 'at://'
#   clean <- sub("^at://", "", uri)
#   # Divide em partes pelo último '/'
#   parts <- strsplit(clean, "/")[[1]]
#   did <- parts[1]
#   post_id <- parts[length(parts)]
#   paste0("https://bsky.app/profile/", did, "/post/", post_id)
# }
```


```{r}
posts |>
  select(uri, cid, author, text) |> 
  filter(author == "zé das couves") |> 
  summarize()
```

